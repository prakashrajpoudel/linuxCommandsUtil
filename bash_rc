# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# User specific aliases and functions
PATH=/usr/local/apache-maven/maven/bin:/other/jdk/bin:$PATH:$HOME/bin:/opt/adt-bundle-linux-x86_64-20140702/sdk/platform-tools
export PATH
JDK_HOME=/opt/jdk
export JDK_HOME
JAVA_HOME=/opt/jdk
export JAVA_HOME
JRE_HOME=$JAVA_HOME/jre
export JRE_HOME
#CATALINA_HOME=/other/apache-tomcat-6.0.29
CATALINA_HOME=/opt/tomcat
export CATALINA_HOME
#export CATALINA_PID=$CATALINA_HOME/pid
#JAVA_OPTS="-server -Xmx4096m -Xms2048m -XX:MaxPermSize=2048m -XX:ReservedCodeCacheSize=64m"
JAVA_OPTS="-server -Xmx1024m -Xms128m -XX:MaxPermSize=2048m -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:+CMSPermGenSweepingEnabled -Djava.awt.headless=true"
export JAVA_OPTS
MAVEN_HOME="/opt/maven"
export MAVEN_HOME
TOMCAT_HOME="/opt/tomcat"
export TOMCAT_HOME

MAVEN_OPTS="-Xmx2048m -Xms512m -XX:PermSize=128m -XX:MaxPermSize=256m -XX:ReservedCodeCacheSize=64m"
export MAVEN_OPTS
alias mci='mvn clean install'
alias tid='ps -ef | grep tomcat | grep java'

#alias tid2='tid1 | grep java'
#alias tid="tid2 2 | awk '{print $2}'"
#QT_PLUGIN_PATH=/usr/lib/qt4/plugins
#export QT_PLUGIN_PATH

function parse_git_branch {
  ref=$(git-symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")"
}

#################### GIT SETTINGS ######################
# Get the git-completion loaded
if [ -f /other/.git-script/git-completion.bash ]; then
        . /other/.git-script/git-completion.bash
fi

# Additional work for git-completion
complete -o default -o nospace -F _git_branch gb
complete -o default -o nospace -F _git_checkout gc

# Display branch name
GIT_PS1_SHOWDIRTYSTATE=true

function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}
function parse_git_branch {
  git branch  2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}
export PS1='\u@\h \[\033[1;33m\]\w\[\033[0m\]$(parse_git_branch)$ '

# User specific environment and startup programs
alias gad='git add'
alias gpu='git push'
alias glo='git log'
alias gst='git status'
alias gdi='git diff'
alias gcm='git commit -m'
alias gca='git commit -am'
alias gbr='git branch'
alias gch='git checkout'
alias gpu='git pull --rebase'

#PS1="\w \$(parse_git_branch)\$ "
## Aliasing liquibase
alias liquibase='/other/projects/liquibase/liquibase-2.0.5-bin/liquibase'
###export liquibase

## Auto build alias
alias autobuild='/other/build/autobuild.git/builders/autobuild.py'

## Push changes into master branch
alias pushchanges='/other/build/pushchange.sh'

## Alias tomcat start
alias tomcatstart='sh /opt/tomcat/bin/catalina.sh jpda start'

## Alias tomcat stop
alias tomcatstop='sh /other/scripts/stopTomcat.sh'
## Switch Project 
alias gotoproject='sh /other/scripts/gotoproject.sh'
alias eclipse='/home/prakashpoudel/Downloads/eclipse/eclipse'
alias copy='sh /other/learning/copy.sh'
alias findFile='sh /other/scripts/my_custom_script/scripts/findFile.sh'
#
#export CATALINA_OPTS="$CATALINA_OPTS -Dorg.apache.el.parser.SKIP_IDENTIFIER_CHECK=false"
